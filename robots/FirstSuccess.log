kshaurya@kshaurya-laptop:~$ openrave.py --database inversekinematics --robot=robots/er4u.xml --iktype=translationDirection5D
[kinbody.cpp:1784] invalid equation syntax 'joint5' for joint gripperRight
openravepy._openravepy_0_6.databases.inversekinematics: Generating inverse kinematics for manip gripper: TranslationDirection5D [0, 1, 2, 3, 4] (this might take up to 10 min)
openravepy._openravepy_0_6.databases.inversekinematics: creating ik file /home/kshaurya/.openrave/kinematics.f232fed69d7a6c09fe4e2a58d91ad6cd/ikfast55.TranslationDirection5D.0_1_2_3_4.cpp
ikfast: moved translation [0, 0, 0] to right end
ikfast: moved translation [0, 0, 261/2000] to left end
ikfast: moved translation on intersecting axis [0, 0, 0] to left
ikfast: [[1, 0, 0, 0],[0, 0, 1, 289/2000],[0, -1, 0, 0]]
ikfast: [[cos(j0), -sin(j0), 0, 0],[sin(j0), cos(j0), 0, 0],[0, 0, 1, 0]]
ikfast: [[0, 0, 1, 0],[1, 0, 0, -19/1000],[0, 1, 0, 0]]
ikfast: [[cos(j1), -sin(j1), 0, 0],[sin(j1), cos(j1), 0, 0],[0, 0, 1, 0]]
ikfast: [[1, 0, 0, -223/1000],[0, 1, 0, 0],[0, 0, 1, 0]]
ikfast: [[cos(j2), -sin(j2), 0, 0],[sin(j2), cos(j2), 0, 0],[0, 0, 1, 0]]
ikfast: [[1, 0, 0, -443/2000],[0, 1, 0, 0],[0, 0, 1, 0]]
ikfast: [[cos(j3), -sin(j3), 0, 0],[sin(j3), cos(j3), 0, 0],[0, 0, 1, 0]]
ikfast: [[0, 0, -1, 0],[0, 1, 0, 0],[1, 0, 0, 0]]
ikfast: [[cos(j4), -sin(j4), 0, 0],[sin(j4), cos(j4), 0, 0],[0, 0, 1, 0]]
ikfast: [[1, 0, 0, 0],[0, 1, 0, 0],[0, 0, 1, 0]]
ikfast: ikfast translation direction 5d: [j0, j1, j2, j3, j4]
ikfast: attempting li/woernle/hiller general ik method
ikfast: found non-singular AU matrix
ikfast: special structure in equations detected, try to solve through elimination
ikfast: [] [j0]
ikfast: converting polyeq "Poly((cj0*px + py*sj0)*htj2, htj1, htj2)" to "Poly(cj0*px + py*sj0, htj1, htj2)"
ikfast: [j0, j1] [j2, j3, j4]
ikfast: [j0, j1, j4] [j2, j3]
ikfast: j3 solution: equations used for atan2: [4689/800000 - pp - 4237*cj1/500000 + 36769*cos(j3)/1000000 - 223*pz*sj1/500 - 19*cj0*py/500 + 19*px*sj0/500 - 223*cj0*cj1*py/500 + 223*cj1*px*sj0/500, -px*r00 - py*r01 - pz*r02 - 223*r02*sj1/1000 - 19*cj0*r01/1000 + 19*r00*sj0/1000 + 443*cj4*sin(j3)/2000 - 223*cj0*cj1*r01/1000 + 223*cj1*r00*sj0/1000, 19*r02/1000 + 83*cj4/1000 + 223*cj1*r02/1000 + 443*cj4*cos(j3)/2000 + cj0*py*r02 + pz*r00*sj0 - cj0*pz*r01 - px*r02*sj0 - 223*cj0*r01*sj1/1000 + 223*r00*sj0*sj1/1000, -44761*sj4/800000 - 36769*sj4*cos(j3)/1000000 - 5009*cj0*r00/100000 - 5009*r01*sj0/100000 - 19*py*r00/500 + 19*px*r01/500 - cj0*pp*r00 - pp*r01*sj0 - 4237*cj0*cj1*r00/500000 - 4237*cj1*r01*sj0/500000 - 223*cj1*py*r00/500 + 223*cj1*px*r01/500 + 2*cj0*px*py*r01 + 2*cj0*px*pz*r02 + 2*px*py*r00*sj0 + 2*py*pz*r02*sj0 - 223*cj0*pz*r00*sj1/500 - 223*pz*r01*sj0*sj1/500 + 223*cj0*px*r02*sj1/500 + 223*py*r02*sj0*sj1/500 + 2*cj0*r00*px**2 + 2*r01*sj0*py**2]
ikfast: j3 solution: equations used for atan2: [4689/800000 - pp - 4237*cj1/500000 + 36769*cos(j3)/1000000 - 223*pz*sj1/500 - 19*cj0*py/500 + 19*px*sj0/500 - 223*cj0*cj1*py/500 + 223*cj1*px*sj0/500, -px*r00 - py*r01 - pz*r02 - 223*r02*sj1/1000 - 19*cj0*r01/1000 + 19*r00*sj0/1000 + 443*cj4*sin(j3)/2000 - 223*cj0*cj1*r01/1000 + 223*cj1*r00*sj0/1000, 19*r02/1000 + 83*cj4/1000 + 223*cj1*r02/1000 + 443*cj4*cos(j3)/2000 + cj0*py*r02 + pz*r00*sj0 - cj0*pz*r01 - px*r02*sj0 - 223*cj0*r01*sj1/1000 + 223*r00*sj0*sj1/1000, -44761*sj4/800000 - 36769*sj4*cos(j3)/1000000 - 5009*cj0*r00/100000 - 5009*r01*sj0/100000 - 19*py*r00/500 + 19*px*r01/500 - cj0*pp*r00 - pp*r01*sj0 - 4237*cj0*cj1*r00/500000 - 4237*cj1*r01*sj0/500000 - 223*cj1*py*r00/500 + 223*cj1*px*r01/500 + 2*cj0*px*py*r01 + 2*cj0*px*pz*r02 + 2*px*py*r00*sj0 + 2*py*pz*r02*sj0 - 223*cj0*pz*r00*sj1/500 - 223*pz*r01*sj0*sj1/500 + 223*cj0*px*r02*sj1/500 + 223*py*r02*sj0*sj1/500 + 2*cj0*r00*px**2 + 2*r01*sj0*py**2]
ikfast: [j0, j1, j4, j3] [j2]
ikfast: j2 solution: equations used for atan2: [-cj1*r02 + cj0*r01*sj1 + cj3*cj4*cos(j2) - cj4*sj3*sin(j2) - r00*sj0*sj1, -r02*sj1 + cj1*r00*sj0 - cj0*cj1*r01 - cj3*cj4*sin(j2) - cj4*sj3*cos(j2), -443*sin(j2)/2000 + 19*sj1/1000 - cj1*pz - 83*cj3*sin(j2)/1000 - 83*sj3*cos(j2)/1000 + cj0*py*sj1 - px*sj0*sj1, -223/1000 - 443*cos(j2)/2000 - 19*cj1/1000 - pz*sj1 - 83*cj3*cos(j2)/1000 + 83*sj3*sin(j2)/1000 + cj1*px*sj0 - cj0*cj1*py, -443*sj4*sin(j2)/2000 + px*r01*sj1 - py*r00*sj1 - 83*cj3*sj4*sin(j2)/1000 - 83*sj3*sj4*cos(j2)/1000 - 19*cj0*r00*sj1/1000 - 19*r01*sj0*sj1/1000 + cj0*cj1*pz*r00 + cj1*pz*r01*sj0 - cj0*cj1*px*r02 - cj1*py*r02*sj0, -223*cj0*r00/1000 - 223*r01*sj0/1000 + 443*sj4*cos(j2)/2000 + cj1*px*r01 - cj1*py*r00 - 83*sj3*sj4*sin(j2)/1000 - 19*cj0*cj1*r00/1000 - 19*cj1*r01*sj0/1000 + 83*cj3*sj4*cos(j2)/1000 + cj0*px*r02*sj1 + py*r02*sj0*sj1 - cj0*pz*r00*sj1 - pz*r01*sj0*sj1, -36769*cj4*sin(j2)/1000000 - 4237*r00*sj0/500000 + 223*px*r00/500 + 223*py*r01/500 + 223*pz*r02/500 + 4237*cj0*r01/500000 + 6171*r02*sj1/125000 - pp*r02*sj1 - 44761*cj3*cj4*sin(j2)/800000 - 5009*cj1*r00*sj0/100000 + 19*cj1*px*r00/500 + 19*cj1*py*r01/500 + 19*cj1*pz*r02/500 + 5009*cj0*cj1*r01/100000 + 168693*cj4*sj3*cos(j2)/4000000 + cj1*pp*r00*sj0 - cj0*cj1*pp*r01 + 2*px*pz*r00*sj1 + 2*py*pz*r01*sj1 - 19*cj0*py*r02*sj1/500 - 19*pz*r00*sj0*sj1/500 + 19*cj0*pz*r01*sj1/500 + 19*px*r02*sj0*sj1/500 - 2*cj1*px*py*r01*sj0 - 2*cj1*px*pz*r02*sj0 + 2*cj0*cj1*px*py*r00 + 2*cj0*cj1*py*pz*r02 + 2*r02*sj1*pz**2 - 2*cj1*r00*sj0*px**2 + 2*cj0*cj1*r01*py**2, -4237*r02/500000 - 5009*cj1*r02/100000 + 36769*cj4*cos(j2)/1000000 - cj1*pp*r02 - 6171*r00*sj0*sj1/125000 - 223*cj0*py*r02/500 - 223*pz*r00*sj0/500 - 19*px*r00*sj1/500 - 19*py*r01*sj1/500 - 19*pz*r02*sj1/500 + 223*cj0*pz*r01/500 + 223*px*r02*sj0/500 + 6171*cj0*r01*sj1/125000 + 44761*cj3*cj4*cos(j2)/800000 + 168693*cj4*sj3*sin(j2)/4000000 + cj0*pp*r01*sj1 - pp*r00*sj0*sj1 + 2*cj1*px*pz*r00 + 2*cj1*py*pz*r01 - 19*cj0*cj1*py*r02/500 - 19*cj1*pz*r00*sj0/500 + 19*cj0*cj1*pz*r01/500 + 19*cj1*px*r02*sj0/500 - 2*cj0*px*py*r00*sj1 - 2*cj0*py*pz*r02*sj1 + 2*px*py*r01*sj0*sj1 + 2*px*pz*r02*sj0*sj1 + 2*cj1*r02*pz**2 - 2*cj0*r01*sj1*py**2 + 2*r00*sj0*sj1*px**2]
ikfast: [j0, j1, j4, j3] [j2]
ikfast: j2 solution: equations used for atan2: [-443*sin(j2)/2000 + 19*sj1/1000 - cj1*pz - 83*cj3*sin(j2)/1000 - 83*sj3*cos(j2)/1000 + cj0*py*sj1 - px*sj0*sj1, -223/1000 - 443*cos(j2)/2000 - 19*cj1/1000 - pz*sj1 - 83*cj3*cos(j2)/1000 + 83*sj3*sin(j2)/1000 + cj1*px*sj0 - cj0*cj1*py, -443*sin(j2)/2000 - 83*cj3*sin(j2)/1000 - 83*sj3*cos(j2)/1000 + px*r01*sj1 - py*r00*sj1 - 19*cj0*r00*sj1/1000 - 19*r01*sj0*sj1/1000 + cj0*cj1*pz*r00 + cj1*pz*r01*sj0 - cj0*cj1*px*r02 - cj1*py*r02*sj0, 443*cos(j2)/2000 - 223*cj0*r00/1000 - 223*r01*sj0/1000 - 83*sj3*sin(j2)/1000 + 83*cj3*cos(j2)/1000 + cj1*px*r01 - cj1*py*r00 - 19*cj0*cj1*r00/1000 - 19*cj1*r01*sj0/1000 + cj0*px*r02*sj1 + py*r02*sj0*sj1 - cj0*pz*r00*sj1 - pz*r01*sj0*sj1]
ikfast: [j0, j1, j4, j3] [j2]
ikfast: j2 solution: equations used for atan2: [-443*sin(j2)/2000 + 19*sj1/1000 - cj1*pz - 83*cj3*sin(j2)/1000 - 83*sj3*cos(j2)/1000 + cj0*py*sj1 - px*sj0*sj1, -223/1000 - 443*cos(j2)/2000 - 19*cj1/1000 - pz*sj1 - 83*cj3*cos(j2)/1000 + 83*sj3*sin(j2)/1000 + cj1*px*sj0 - cj0*cj1*py, 443*sin(j2)/2000 + 83*cj3*sin(j2)/1000 + 83*sj3*cos(j2)/1000 + px*r01*sj1 - py*r00*sj1 - 19*cj0*r00*sj1/1000 - 19*r01*sj0*sj1/1000 + cj0*cj1*pz*r00 + cj1*pz*r01*sj0 - cj0*cj1*px*r02 - cj1*py*r02*sj0, -443*cos(j2)/2000 - 223*cj0*r00/1000 - 223*r01*sj0/1000 - 83*cj3*cos(j2)/1000 + 83*sj3*sin(j2)/1000 + cj1*px*r01 - cj1*py*r00 - 19*cj0*cj1*r00/1000 - 19*cj1*r01*sj0/1000 + cj0*px*r02*sj1 + py*r02*sj0*sj1 - cj0*pz*r00*sj1 - pz*r01*sj0*sj1]
ikfast: [j0, j1, j4] [j2, j3]
ikfast: [j0, j1, j4, j3] [j2]
ikfast: j2 solution: equations used for atan2: [-443*sin(j2)/2000 + 19*sj1/1000 - cj1*pz - 83*cj3*sin(j2)/1000 - 83*sj3*cos(j2)/1000 + cj0*py*sj1 - px*sj0*sj1, -223/1000 - 443*cos(j2)/2000 - 19*cj1/1000 - pz*sj1 - 83*cj3*cos(j2)/1000 + 83*sj3*sin(j2)/1000 + cj1*px*sj0 - cj0*cj1*py, -443*sin(j2)/2000 - 83*cj3*sin(j2)/1000 - 83*sj3*cos(j2)/1000 + px*r01*sj1 - py*r00*sj1 - 19*cj0*r00*sj1/1000 - 19*r01*sj0*sj1/1000 + cj0*cj1*pz*r00 + cj1*pz*r01*sj0 - cj0*cj1*px*r02 - cj1*py*r02*sj0, 443*cos(j2)/2000 - 223*cj0*r00/1000 - 223*r01*sj0/1000 - 83*sj3*sin(j2)/1000 + 83*cj3*cos(j2)/1000 + cj1*px*r01 - cj1*py*r00 - 19*cj0*cj1*r00/1000 - 19*cj1*r01*sj0/1000 + cj0*px*r02*sj1 + py*r02*sj0*sj1 - cj0*pz*r00*sj1 - pz*r01*sj0*sj1]
ikfast: [j0, j1, j4] [j2, j3]
ikfast: [j0, j1, j4, j3] [j2]
ikfast: j2 solution: equations used for atan2: [-443*sin(j2)/2000 + 19*sj1/1000 - cj1*pz - 83*cj3*sin(j2)/1000 - 83*sj3*cos(j2)/1000 + cj0*py*sj1 - px*sj0*sj1, -223/1000 - 443*cos(j2)/2000 - 19*cj1/1000 - pz*sj1 - 83*cj3*cos(j2)/1000 + 83*sj3*sin(j2)/1000 + cj1*px*sj0 - cj0*cj1*py, 443*sin(j2)/2000 + 83*cj3*sin(j2)/1000 + 83*sj3*cos(j2)/1000 + px*r01*sj1 - py*r00*sj1 - 19*cj0*r00*sj1/1000 - 19*r01*sj0*sj1/1000 + cj0*cj1*pz*r00 + cj1*pz*r01*sj0 - cj0*cj1*px*r02 - cj1*py*r02*sj0, -443*cos(j2)/2000 - 223*cj0*r00/1000 - 223*r01*sj0/1000 - 83*cj3*cos(j2)/1000 + 83*sj3*sin(j2)/1000 + cj1*px*r01 - cj1*py*r00 - 19*cj0*cj1*r00/1000 - 19*cj1*r01*sj0/1000 + cj0*px*r02*sj1 + py*r02*sj0*sj1 - cj0*pz*r00*sj1 - pz*r01*sj0*sj1]
ikfast: solved coupled variables: [j0, j1, j2, j3, j4]
ikfast: generating cpp code...
openravepy._openravepy_0_6.databases.inversekinematics: inversekinematics generation is done, compiled shared object: /home/kshaurya/.openrave/kinematics.f232fed69d7a6c09fe4e2a58d91ad6cd/ikfast55.TranslationDirection5D.i686.0_1_2_3_4.so

